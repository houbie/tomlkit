name: Tests

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - "**"

jobs:
  Linting:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: pre-commit/action@v2.0.3
  Tests:
    needs: Linting
    name: ${{ matrix.os }} / ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [ Ubuntu, MacOS, Windows ]
        python-version: [ 3.7, 3.8, 3.9, "3.10" ]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get full python version
        id: full-python-version
        shell: bash
        run: |
          echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")

      - name: Cache .pyprojectx and .venv
        uses: actions/cache@v2
        with:
          path: |
            .pyprojectx
            .venv
          key: ${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Ensure cache is healthy
        if: steps.cache.outputs.cache-hit == 'true'
        shell: bash
        run: timeout 10s poetry run pip --version || rm -rf .venv

      - name: Install dependencies and run tests
        shell: bash
        run: python pw i && python pw test
